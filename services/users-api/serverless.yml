service: users-api
org: joseed

frameworkVersion: ">=3.0.0 <4.0.0"

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  # Configuración específica para AWS Academy
  iam:
    role: arn:aws:iam::328458381283:role/LabRole
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    DYNAMODB_REGION: ${self:provider.region}
    JWT_SECRET: ${file(../../config/${self:provider.stage}.yml):JWT_SECRET}
    USERS_TABLE: bookstore-users-${self:provider.stage}
    FAVORITES_TABLE: bookstore-user-favorites-${self:provider.stage}
    WISHLIST_TABLE: bookstore-user-wishlist-${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchGetItem
        - dynamodb:BatchWriteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/bookstore-*"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/bookstore-*/index/*"

plugins:
  - serverless-python-requirements
  - serverless-offline

custom:
  pythonRequirements:
    dockerizePip: non-linux
    slim: true
    strip: false

functions:
  app:
    handler: app.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
      - http:
          path: /
          method: ANY
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
